<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ZkooTutorialModel_TutorialWindowTitle" xml:space="preserve">
    <value>ZKOOチュートリアル</value>
    <comment>ZKOO Tutorial</comment>
  </data>
  <data name="ZkooTutorialModel_EndUserLicenseAgreement" xml:space="preserve">
    <value>エンドユーザー使用許諾契約書</value>
    <comment>End User License Agreement</comment>
  </data>
  <data name="ZkooTutorialModel_PrivacyPolicy" xml:space="preserve">
    <value>プライバシーポリシー</value>
    <comment>Privacy Policy</comment>
  </data>
  <data name="ZkooTutorialModel_IAcceptTheEula" xml:space="preserve">
    <value>EULAに同意する</value>
    <comment>I accept the EULA.</comment>
  </data>
  <data name="ZkooTutorialModel_BySelectingNext_YouAgreeToExvisions" xml:space="preserve">
    <value>NEXTを選択することで、EULAに同意されたとみなします</value>
    <comment>By selecting NEXT, you agree to Exvision&apos;s</comment>
  </data>
  <data name="ZkooTutorialModel_LetsStartTutorials" xml:space="preserve">
    <value>チュートリアルを開始しましょう！</value>
    <comment>Let&apos;s start tutorials!</comment>
  </data>
  <data name="ZkooTutorialModel_FailedToPlayAVideo" xml:space="preserve">
    <value>ビデオ再生に失敗しました</value>
    <comment>Failed to play a video.</comment>
  </data>
  <data name="ZkooTutorialModel_ZkooTutorialIsStarting" xml:space="preserve">
    <value>ZKOOのチュートリアルを開始します</value>
    <comment>ZKOO tutorial is starting.</comment>
  </data>
  <data name="ZkooTutorialModel_ZkooTutorialNeedsInternetConnections" xml:space="preserve">
    <value>ZKOOのチュートリアルは、インターネット接続を必要とします</value>
    <comment>ZKOO tutorial needs internet connection.</comment>
  </data>
  <data name="ZkooTutorialModel_Replay" xml:space="preserve">
    <value>リプレイ</value>
    <comment>Replay</comment>
  </data>
  <data name="ZkooTutorialModel_Video" xml:space="preserve">
    <value>ビデオ</value>
    <comment>Video</comment>
  </data>
  <data name="ZkooTutorialModel_Retry" xml:space="preserve">
    <value>やり直し</value>
    <comment>Retry</comment>
  </data>
  <data name="ZkooTutorialModel_Next" xml:space="preserve">
    <value>次へ</value>
    <comment>Next</comment>
  </data>
  <data name="ZkooTutorialModel_PleaseTapCirclesInOrder" xml:space="preserve">
    <value>円の中を順番にタップしてください</value>
    <comment>Please tap circles in order.</comment>
  </data>
  <data name="ZkooTutorialModel_SkipVideo" xml:space="preserve">
    <value>ビデオをスキップしますか？</value>
    <comment>Skip video?</comment>
  </data>
  <data name="ZkooTutorialModel_Complete" xml:space="preserve">
    <value>完了しました</value>
    <comment>Complete.</comment>
  </data>
  <data name="ZkooTutorialModel_TryAgain" xml:space="preserve">
    <value>もう一度トライしましょう</value>
    <comment>Try again.</comment>
  </data>
  <data name="ZkooTutorialModel_WellDone" xml:space="preserve">
    <value>よくできました</value>
    <comment>Well done.</comment>
  </data>
  <data name="ZkooTutorialModel_TutorialCompletes" xml:space="preserve">
    <value>チュートリアルを完了しました！</value>
    <comment>Tutorial completes!</comment>
  </data>
  <data name="ZkooTutorialModel_YouCanStartTutorialFromSettingsBasic" xml:space="preserve">
    <value>設定画面の基本設定内のボタンを押すことで、再度チュートリアルを開始できます。</value>
    <comment>You can start this Tutorial again from Settings &gt; Basic.</comment>
  </data>
  <data name="ZkooTutorialModel_SettingsMenuCanBeOpenedBy" xml:space="preserve">
    <value>設定画面を開くには、カメラビューをタップするか、システムトレイ上のZKOOアイコンを右クリック、「設定」を選択してください。</value>
    <comment>Settings menu can be opened by tapping on Camera View or right-clicking ZKOO icon on the notification area.</comment>
  </data>
  <data name="ZkooTutorialModel_StartTutorialAgainWhenZkooApplicationIsLaunched" xml:space="preserve">
    <value>ZKOOアプリ起動時に、チュートリアルを開始する。</value>
    <comment>Start Tutorial again when ZKOO application is launched.</comment>
  </data>
  <data name="ZkooTutorialModel_TryAgainDetail" xml:space="preserve">
    <value>ZKOOをスクリーンの中央部に置いてください。
1.5mから2m以上離れて、
カメラのほうに向かって、カメラの正面に座ってください。
カメラの角度を調整する方法は、セットアップガイドをご覧下さい。</value>
    <comment>ZKOO will be in the center of the screen.
Sit away 7ft.
Toward the front of the camera, in the middle.
To adjust the angle of the camera to see the Setup Guide.</comment>
  </data>
</root>